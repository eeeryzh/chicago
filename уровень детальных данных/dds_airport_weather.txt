create schema if not exists kdz_31_dds; --создаем схему
--погода
drop table if exists kdz_31_dds.airport_weather_31;
CREATE TABLE kdz_31_dds.airport_weather_31 (
	airport_dk int NOT NULL, -- постоянный ключ аэропорта. нужно взять из таблицы аэропортов
	weather_type_dk char(6) NOT NULL, -- постоянный ключ типа погоды. заполняется по формуле
	cold smallint default(0),
	rain smallint default(0),
	snow smallint default(0),
	thunderstorm smallint default(0),
	drizzle smallint default(0),
	fog_mist smallint default(0),
	t int NULL,
	max_gws int NULL,
	w_speed int NULL,
	date_start timestamp NOT NULL,
	date_end timestamp NOT NULL default('3000-01-01'::timestamp),
	loaded_ts timestamp default(now()),
	PRIMARY KEY (airport_dk, date_start)
);

insert
	into
	kdz_31_dds.airport_weather_31
select
	tbl1.*
from
	(
	select
   dwh_cust.dwh_dk as airport_dk,
   wt.weather_type_dk as weather_type_dk, --выбирается из таблицы dds.weather_type на основе комбинации погоды, которая идет ниже
   CASE
       WHEN stg_weather_31.t_air_temperature > 0 THEN 0
       ELSE 1
   END AS cold,
   CASE
       WHEN LOWER(stg_weather_31.ww_present) LIKE '%rain%' THEN 1
       ELSE 0
   END AS rain,
   CASE
       WHEN LOWER(stg_weather_31.ww_present)  LIKE '%snow%' THEN 1
       ELSE 0
   END AS snow,
    CASE
       WHEN LOWER(stg_weather_31.ww_present)  LIKE '%thunderstorm%' THEN 1
       ELSE 0
   END AS thunderstorm,
   CASE
       WHEN LOWER(stg_weather_31.ww_present)  LIKE '%drizzle%' THEN 1
       ELSE 0
   END AS drizzle,
   CASE
	    WHEN LOWER(stg_weather_31.ww_present)  like '%fog%' or LOWER(stg_weather_31.ww_present) like '%mist%' THEN 1
       ELSE 0
   END AS fog_mist,
   stg_weather_31.t_air_temperature as t,
   stg_weather_31.ff10_max_gust_value as max_gws,
   stg_weather_31.ff_wind_speed as w_speed,
   TO_TIMESTAMP(stg_weather_31.local_datetime, 'YYYY-MM-DD HH24:MI:SS') as date_start,
   COALESCE(
       TO_TIMESTAMP(
           LEAD(stg_weather_31.local_datetime) OVER (ORDER BY stg_weather_31.local_datetime),
           'YYYY-MM-DD HH24:MI:SS'
       ),
       '3000-01-01'::timestamp
   ) AS date_end
   --TO_TIMESTAMP(LEAD(stg_weather_31.local_datetime) OVER (ORDER BY stg_weather_31.local_datetime), 'YYYY-MM-DD HH24:MI:SS') AS date_end
   from
		(
		select *
		from
			kdz_31_staging.weather_31
		where
			loaded_ts = (
			select
				max(loaded_ts)
			from
				kdz_31_staging.weather_31
				--отбираем только самые новые значения
)) stg_weather_31
--перекодировка ключей
		inner join dwh.id_airport dwh_cust on
       stg_weather_31.icao_code = dwh_cust.src_icao_id --джойним по коду
       INNER JOIN dds.weather_type AS wt
   ON (CASE WHEN stg_weather_31.t_air_temperature > 0 THEN false  ELSE true END) = wt.cold
   AND (CASE WHEN LOWER(stg_weather_31.ww_present) LIKE '%rain%' THEN true ELSE false  END)= wt.rain
   AND (CASE WHEN LOWER(stg_weather_31.ww_present) LIKE '%snow%' THEN true ELSE false END) = wt.snow
   AND (CASE WHEN LOWER(stg_weather_31.ww_present) LIKE '%thunderstorm%' THEN true ELSE false END) = wt.thunderstorm
   AND (CASE WHEN LOWER(stg_weather_31.ww_present) LIKE '%drizzle%' THEN true ELSE false END) = wt.drizzle
   AND (CASE WHEN LOWER(stg_weather_31.ww_present) LIKE '%fog%' OR LOWER(stg_weather_31.ww_present) LIKE '%mist%' THEN true ELSE false END) = wt.fog_mist
) tbl1
--при конфликте с первичным ключом, обновляем данные (все кроме ключа)
ON CONFLICT (airport_dk, date_start) DO UPDATE
SET
   date_end = excluded.date_end,
   weather_type_dk = excluded.weather_type_dk,
   cold = excluded.cold,
   rain = excluded.rain,
   snow = excluded.snow,
   thunderstorm = excluded.thunderstorm,
   drizzle = excluded.drizzle,
   fog_mist = excluded.fog_mist,
   t = excluded.t,
   max_gws = excluded.max_gws,
   w_speed = excluded.w_speed,
   loaded_ts = now()
;